import { useRef } from "react";
import { useState, useReducer, useEffect } from "react"
import { useSelector, useDispatch } from "react-redux";
import { updateUserAC } from "../../redux/actionCreators/userAC";

export default function Exam() {
    const [step, setStep] = useState(1);
    const [gram, setGram] = useState(0);
    const [nickname, setNickname] = useState('');
    // reducer –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∏–º–µ–Ω–∏ —é–∑–µ—Ä–∞
    // const [state, dispatch] = useReducer(reducer, state={user: 'Old_nickname'});
    // dispatch({type: "USER_EDIT", payload: "New_Nickname"})
    useEffect (()=>{
        console.log('Nickname changed');
    }, [nickname]);

    useEffect (()=>{
        console.log('Nickname mounted');
        return (()=> console.log('Nickname deleted'));
    }, []);

    const dispatch = useDispatch();
    const { user } = useSelector(state => state.user);
    const inputEl = useRef(null);
    return (
        <div>
            <label>–í–≤–µ–¥–∏ –Ω–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ</label>
            <br />
            <input
                defaultValue={step}
                onChange={(e) => setGram(Number(e.target.value))}
                ref={inputEl} type="text"
            />
            <br />
            <label>–í–≤–µ–¥–∏ —Å–∫–æ–ª—å–∫–æ –¥–æ–±–∞–≤–∏—Ç—å –∂–∞—Ä—É</label>
            <br />
            <input
                value={step}
                onChange={(e) => setStep(Number(e.target.value))}
            />
            <p>
                –Ø –Ω–∞–≥–æ—Ç–æ–≤–∏–ª –±–∏—Ç–æ–≤, —á—Ç–æ–±—ã –ø–æ—Ç–æ–º, —Å–ª–æ–≤–∞ –∏–∑–æ —Ä—Ç–æ–≤ –≤—ã–ª–µ—Ç–∞–ª–∏ –∏ –ª–æ–∂–∏–ª–∏—Å—å –ø–ª–∞—Å—Ç–æ–º!
            </p>
            <p>–ù–∞ —Ç–µ–∫—É—â–∏–π –º–æ–º–µ–Ω—Ç –∑–∞–≤–µ–∑–ª–∏ {gram} —Å—Ç–∞—Ä—ã—Ö –≥—Ä–∞–º-–∑–∞–ø–∏—Å–µ–π {gram ? "üòé" : "üò¢"}
            </p>
            <button
                onClick={() => setGram(gram + step)}
            >
                –î–û–ë–ê–í–¨ –ñ–ê–†–£, –ë–†–ê–¢!
            </button>
            <br />
            <br />
            <button
                onClick={() => {
                    setGram(0);
                    setStep(0);
                    inputEl.current.value = 0
                }}
            >
                –ü–û –ì–û–õ–û–í–ï –°–ï–ë–ï –ü–û–°–¢–£–ß–ò
            </button>
            <br />
            <br />
            <label
            style={{backgroundColor: "white"}}
            >
                {user.nickname || '–ö—Ç–æ —Ç—ã –≤–æ–∏–Ω?'}
            </label>
            <br />
            <input
                name="input"
                defaultValue={nickname}
                onChange={(e) => setNickname(e.target.value)}
                type="text"
            />
            <br />
            <button
                onClick={() => dispatch(updateUserAC(nickname))
                }
            >
                –°–ú–ï–ù–ò –†–ñ–ê–í–´–ï –ù–û–ñ–ò –ù–ê –ö–ò–ù–ñ–ê–õ–´
            </button>
        </div>

    )
}